import asyncio

from playwright.async_api import async_playwright, TimeoutError

selectors = [
    # generated through browser inspector (2)
    '#notice > div:nth-child(2) > div > button',
    'xpath=/html/body/div/div[2]/div[2]/div/button',
    # generated by playwright
    'button:has-text("Zustimmen")',
    # generated using simple css rule
    'html > body > div > #notice > div:nth-child(2) > div > button'
]


async def main():
    async with async_playwright() as playwright:
        chromium = playwright.chromium
        browser = await chromium.launch(headless=False)
        page = await browser.new_page()
        await page.goto('http://heise.de/')
        await page.wait_for_load_state('networkidle')
        await asyncio.sleep(2)
        for s in selectors:
            try:
                await page.click(s, force=True, timeout=500)  # 1 s timeout
                print(f'Click successful using selector {s}.')
                break
            except TimeoutError as e:
                print(e)
        print('waiting 30s')
        await asyncio.sleep(120)

        for s in selectors:
            try:
                await page.click(s, force=True, timeout=1000)  # 1 s timeout
                print(f'Click successful using selector {s}.')
                break
            except TimeoutError as e:
                print(e)

        await browser.close()


if __name__ == "__main__":
    asyncio.run(main())
